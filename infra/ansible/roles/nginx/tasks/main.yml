- name: Install Certbot
  apt:
    name:
      - certbot
      - python3-certbot-nginx
    install_recommends: no
    update_cache: yes

- name: Check if certificates for frontend are already present
  stat:
    path: /etc/letsencrypt/live/{{domain_name}}/fullchain.pem
  register: cert_file
  when: letsencrypt_email is defined

- name: Stop Nginx if certificates for frontend are not present
  systemd:
    name: nginx
    state: stopped
  when: letsencrypt_email is defined and cert_file.stat.exists == False

- name: Run Certbot for frontend
  shell:
    cmd: "certbot certonly --standalone -d {{domain_name}} -n --agree-tos -m {{letsencrypt_email}}"
    creates: /etc/letsencrypt/live/{{domain_name}}/fullchain.pem
  when: letsencrypt_email is defined

- name: Check if certificates for backend are already present
  stat:
    path: /etc/letsencrypt/live/{{api_domain_name}}/fullchain.pem
  register: api_cert_file
  when: letsencrypt_email is defined

- name: Stop Nginx if certificates for backend are not present
  systemd:
    name: nginx
    state: stopped
  when: letsencrypt_email is defined and api_cert_file.stat.exists == False

- name: Run Certbot for backend
  shell:
    cmd: "certbot certonly --standalone -d {{api_domain_name}} -n --agree-tos -m {{letsencrypt_email}}"
    creates: /etc/letsencrypt/live/{{api_domain_name}}/fullchain.pem
  when: letsencrypt_email is defined

- name: Generate DH parameters
  shell:
    cmd: "openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 2048"
    creates: /etc/letsencrypt/ssl-dhparams.pem
  when: letsencrypt_email is defined

- name: Install Nginx
  apt:
    name: nginx
    install_recommends: no
    update_cache: yes

- name: Set Nginx configuration
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: Reload Nginx

- name: Disable Nginx default site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify:
    - Reload Nginx

- name: Override certbot service to authenticate via nginx
  template:
    src: certbot.service
    dest: /lib/systemd/system/certbot.service
  notify:
    # Make sure that systemd reloads any changes
    - Reload Nginx

- name: Copy Maintenance directory
  copy:
    src: maintenance/
    dest: /srv/maintenance
    owner: www-data
    group: www-data

- meta: flush_handlers

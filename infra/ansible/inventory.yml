all:
  children:
    tournesol:
      hosts:
        # VM for local development
        tournesol-vm:
          ansible_host: tournesol-vm
          machine_name: tournesol
          domain_name: tournesol-vm
          api_domain_name: tournesol-api
          website_analytics_domain_name: tournesol-webanalytics
          api_scheme: http

          buster_mirror: http://debian.ethz.ch/debian/
          upgrade_packages: true

          maintenance: false

          django_debug: "True"
          django_log_level: "DEBUG"
          django_main_url: "http://{{api_domain_name}}"
          django_database_name: tournesol
          django_database_user: tournesol
          django_email_backend: console
          django_enable_api_wikidata_migrations: true
          django_api_throttle_email: "5/min"
          chrome_extension_id: iahbndmibajbfljmlaaaikgognekamno

          loki_version: "v2.9.2"
          grafana:
            dashboard_alerting_uid: kemHo2Mnz
            datasource_loki_uid: j1so19VIz
            datasource_prometheus_uid: tRVp1rVIk

          nvm_version: "v0.38.0"
          npm_lts_version: "hydrogen"  # codename for Node.js 18 (LTS)
          frontend_scheme: http
          frontend_csp_connect_src: https://noembed.com
          frontend_csp_frame_ancestors: "https://www.youtube.com moz-extension: chrome-extension:"
          frontend_csp_frame_src: https://www.youtube.com
          frontend_csp_image_src: "https://i.ytimg.com https://www.paypal.com https://www.paypalobjects.com https://*.wikimedia.org"
          frontend_csp_script_src: "https://www.youtube.com/iframe_api https://www.youtube.com/s/player/"
          frontend_presidentielle_2022_enabled: true

          monitored_urls:
            - https://staging.tournesol.app/
            - https://api.staging.tournesol.app/admin
            - https://webanalytics.staging.tournesol.app/login

          grafana_domain_name: tournesol-grafana
          grafana_scheme: http
          plausible_hosting_tag: "2023.09.28"

          # Daily clean-up of the back end's expired items.
          tournesol_api_cleartokens_schedule: "*-*-* 02:00:00" # daily at 2am
          tournesol_api_deleteinactiveusers_schedule: "*-*-* 02:20:00" # daily at 2:20am
          tournesol_api_clearsessions_schedule: "*-*-* 02:40:00" # daily at 2:40am

          # Watch account creations
          tournesol_api_watch_account_creation_1h_schedule: "*-*-* *:01:00"
          tournesol_api_watch_account_creation_24h_schedule: "*-*-* 00:01:10"
          tournesol_api_watch_account_number_yesterday_schedule: "*-*-* 00:01:20"

          # Registration reminder
          tournesol_api_remindregistrations_schedule: "*-*-* 17:00:00 Europe/Zurich"

          ml_train_schedule: "*-*-* 00/3:20:00" # every 3 hours
          tournesol_api_createdataset_schedule: "Mon 00:02" # weekly, before the new week

          postgresql_backup_schedule: "*-*-* 1,7,13,19:00:00" # every 6 hours

        # Staging Vultr VM
        tournesol-staging:
          ansible_host: staging.tournesol.app
          machine_name: tournesol
          domain_name: staging.tournesol.app
          api_domain_name: "api.{{domain_name}}"
          website_analytics_domain_name: "webanalytics.{{domain_name}}"
          api_scheme: https

          buster_mirror: http://debian.ethz.ch/debian/
          upgrade_packages: true

          maintenance: false

          django_debug: "False"
          django_log_level: "INFO"
          django_main_url: https://{{api_domain_name}}
          django_database_name: tournesol
          django_database_user: tournesol
          django_email_backend: smtp
          django_enable_api_wikidata_migrations: true
          django_api_throttle_email: "5/min"
          chrome_extension_id: iahbndmibajbfljmlaaaikgognekamno

          loki_version: "v2.9.2"
          grafana:
            dashboard_alerting_uid: kemHo2Mnz
            datasource_loki_uid: j1so19VIz
            datasource_prometheus_uid: tRVp1rVIk

          nvm_version: "v0.38.0"
          npm_lts_version: "hydrogen"  # codename for Node.js 18 (LTS)
          frontend_scheme: https
          frontend_csp_connect_src: https://noembed.com
          frontend_csp_frame_ancestors: "https://www.youtube.com moz-extension: chrome-extension:"
          frontend_csp_frame_src: https://www.youtube.com
          frontend_csp_image_src: "https://i.ytimg.com https://www.paypal.com https://www.paypalobjects.com https://*.wikimedia.org"
          frontend_csp_script_src: "https://www.youtube.com/iframe_api https://www.youtube.com/s/player/"
          frontend_presidentielle_2022_enabled: true

          # Setting this triggers TLS configuration
          letsencrypt_email: tournesol.application@gmail.com

          monitored_urls:
            - https://tournesol.app/
            - https://api.tournesol.app/admin
            - https://webanalytics.tournesol.app/login

          # ID of the Discord role that will be highlighted when a monitored
          # URL is unreachable. (optional)
          discord_role_id_urls_checks: 928020834885464086

          grafana_domain_name: "grafana.{{domain_name}}"
          grafana_scheme: https
          plausible_hosting_tag: "2023.09.28"

          # Daily clean-up of the back end's expired items.
          tournesol_api_cleartokens_schedule: "*-*-* 02:00:00" # daily at 2am
          tournesol_api_deleteinactiveusers_schedule: "*-*-* 02:20:00" # daily at 2:20am
          tournesol_api_clearsessions_schedule: "*-*-* 02:40:00" # daily at 2:40am

          # Watch account creations
          tournesol_api_watch_account_creation_1h_schedule: "*-*-* *:01:00"
          tournesol_api_watch_account_creation_24h_schedule: "*-*-* 00:01:10"
          tournesol_api_watch_account_number_yesterday_schedule: "*-*-* 00:01:20"

          # Registration reminder
          tournesol_api_remindregistrations_schedule: "*-*-* 17:00:00 Europe/Zurich"

          ml_train_schedule: "*-*-* 00/3:20:00" # every 3 hours
          tournesol_api_createdataset_schedule: "Mon 00:02" # weekly, before the new week

          postgresql_backup_schedule: "*-*-* 1,7,13,19:00:00" # every 6 hours

          export_backups_schedule: "*-*-* 1,7,13,19:30:00" # every 6 hours
          export_backups_bucket_name: tournesol-app-backups
          export_backups_path: staging

        # Production Vultr VM
        tournesol-prod:
          ansible_host: tournesol.app
          machine_name: tournesol
          domain_name: tournesol.app
          api_domain_name: "api.{{domain_name}}"
          website_analytics_domain_name: "webanalytics.{{domain_name}}"
          api_scheme: https

          buster_mirror: http://debian.ethz.ch/debian/
          upgrade_packages: false # to be set to true after upgrade tests in staging in order to upgrade prod

          maintenance: false

          django_debug: "False"
          django_log_level: "INFO"
          django_main_url: https://{{api_domain_name}}
          django_database_name: tournesol
          django_database_user: tournesol
          django_email_backend: smtp
          django_enable_api_wikidata_migrations: true
          django_api_throttle_email: "12/min"
          chrome_extension_id: nidimbejmadpggdgooppinedbggeacla

          loki_version: "v2.9.2"
          grafana:
            dashboard_alerting_uid: kemHo2Mnz
            datasource_loki_uid: dFiJRjVSz
            datasource_prometheus_uid: EjLpRC4Sk

          nvm_version: "v0.38.0"
          npm_lts_version: "hydrogen"  # codename for Node.js 18 (LTS)
          frontend_scheme: https
          frontend_csp_connect_src: https://noembed.com
          frontend_csp_frame_ancestors: "https://www.youtube.com moz-extension: chrome-extension:"
          frontend_csp_frame_src: https://www.youtube.com
          frontend_csp_image_src: "https://i.ytimg.com https://www.paypal.com https://www.paypalobjects.com https://*.wikimedia.org"
          frontend_csp_script_src: "https://www.youtube.com/iframe_api https://www.youtube.com/s/player/"
          frontend_presidentielle_2022_enabled: true

          # Setting this triggers TLS configuration
          letsencrypt_email: tournesol.application@gmail.com

          monitored_urls:
            - https://staging.tournesol.app/
            - https://api.staging.tournesol.app/admin
            - https://webanalytics.staging.tournesol.app/login

          # ID of the Discord role that will be highlighted when a monitored
          # URL is unreachable. (optional)
          discord_role_id_urls_checks: 928020834885464086

          grafana_domain_name: "grafana.{{domain_name}}"
          grafana_scheme: https
          plausible_hosting_tag: "2023.09.28"

          # Daily clean-up of the back end's expired items.
          tournesol_api_cleartokens_schedule: "*-*-* 02:00:00" # daily at 2am
          tournesol_api_deleteinactiveusers_schedule: "*-*-* 02:20:00" # daily at 2:20am
          tournesol_api_clearsessions_schedule: "*-*-* 02:40:00" # daily at 2:40am

          # Watch account creations
          tournesol_api_watch_account_creation_1h_schedule: "*-*-* *:01:00"
          tournesol_api_watch_account_creation_24h_schedule: "*-*-* 00:01:10"
          tournesol_api_watch_account_number_yesterday_schedule: "*-*-* 00:01:20"

          # Registration reminder
          tournesol_api_remindregistrations_schedule: "*-*-* 17:00:00 Europe/Zurich"

          # twitterbot: the service script is responsible for running the bot in
          # different languages depending on the day of the week.
          tournesol_twitterbot_schedule: "*-*-* 18:04:00 Europe/Zurich" # daily
          tournesol_twitterbot_top_contributors_schedule: "*-*-1 15:04:00 Europe/Zurich" # monthly

          tournesol_yt_playlists_schedule: "*-*-* 05:15:00" # daily

          ml_train_schedule: "*-*-* 00/3:20:00" # every 3 hours
          tournesol_api_createdataset_schedule: "Mon 00:02" # weekly, before the new week

          postgresql_backup_schedule: "*-*-* 1,7,13,19:00:00" # every 6 hours

          export_backups_schedule: "*-*-* 1,7,13,19:30:00" # every 6 hours
          export_backups_bucket_name: tournesol-app-backups
          export_backups_path: prod

      vars:
        ansible_python_interpreter: /usr/bin/python3
        ansible_ssh_pipelining: true

# Generated by Django 4.0.4 on 2022-06-12 12:41

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.contrib.postgres.operations import UnaccentExtension
from django.db import migrations, models

from tournesol.entities.base import EntityType
from tournesol.utils.video_language import POSTGRES_LANGUAGES


def migrate_forward(apps, schema_editor):
    """
    Fill the search vector, used for fast full-text search
    """
    EntityType.build_all_search_vectors()


class Migration(migrations.Migration):
    dependencies = [
        ("tournesol", "0045_alter_ratelater_constraints"),
    ]

    # Create new Postgres full-text search configs using the Unaccent dictionary
    create_customized_configs = [
        migrations.RunSQL(
            f"""
            CREATE TEXT SEARCH CONFIGURATION customized_{language}( COPY = {language} );
            ALTER TEXT SEARCH CONFIGURATION customized_{language}
            ALTER MAPPING FOR hword, hword_part, word
            WITH unaccent, {language}_stem;
            """,
            reverse_sql=f"""
            DROP TEXT SEARCH CONFIGURATION IF EXISTS customized_{language};
            """,
        )
        for language in POSTGRES_LANGUAGES
    ]

    # In practice, "generic" is equivalent to "customized_english".
    # This should presumably give more relevant results than using
    # no stemmer (aka Postgres's "simple" config).
    create_customized_configs.append(
        migrations.RunSQL(
            """
            CREATE TEXT SEARCH CONFIGURATION generic( COPY = english );
            ALTER TEXT SEARCH CONFIGURATION generic
            ALTER MAPPING FOR hword, hword_part, word
            WITH unaccent, english_stem;
            """,
            reverse_sql=f"""
            DROP TEXT SEARCH CONFIGURATION IF EXISTS generic;
            """,
        )
    )

    operations = (
        [
            UnaccentExtension(),
            migrations.AddField(
                model_name="entity",
                name="search_config_name",
                field=models.CharField(
                    blank=True,
                    choices=[
                        ("customized_arabic", "arabic"),
                        ("customized_danish", "danish"),
                        ("customized_dutch", "dutch"),
                        ("customized_english", "english"),
                        ("customized_finnish", "finnish"),
                        ("customized_french", "french"),
                        ("customized_german", "german"),
                        ("customized_greek", "greek"),
                        ("customized_hungarian", "hungarian"),
                        ("customized_indonesian", "indonesian"),
                        ("customized_irish", "irish"),
                        ("customized_italian", "italian"),
                        ("customized_lithuanian", "lithuanian"),
                        ("customized_nepali", "nepali"),
                        ("customized_norwegian", "norwegian"),
                        ("customized_portuguese", "portuguese"),
                        ("customized_romanian", "romanian"),
                        ("customized_russian", "russian"),
                        ("customized_spanish", "spanish"),
                        ("customized_swedish", "swedish"),
                        ("customized_tamil", "tamil"),
                        ("customized_turkish", "turkish"),
                        ("generic", "other language config"),
                    ],
                    default="generic",
                    help_text="PostgreSQL text search config to use, based on the entity's language",
                    max_length=32,
                ),
            ),
            migrations.AddField(
                model_name="entity",
                name="search_vector",
                field=django.contrib.postgres.search.SearchVectorField(
                    editable=False,
                    null=True,
                    help_text="Indexed words used for the full-text search, that are filtered, "
                    "stemmed and weighted according to the language's search config.",
                ),
            ),
            migrations.AddIndex(
                model_name="entity",
                index=django.contrib.postgres.indexes.GinIndex(
                    fields=["search_vector"], name="search_index"
                ),
            ),
        ]
        + create_customized_configs
        + [
            migrations.RunPython(migrate_forward, migrations.RunPython.noop),
        ]
    )

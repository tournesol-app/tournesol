# Generated by Django 3.1.8 on 2021-05-20 15:21

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0098_auto_20210504_2042'),
    ]

    operations = [
        migrations.AddField(
            model_name='expertrating',
            name='largely_recommended',
            field=models.FloatField(blank=True, default=None, help_text='Should be largely recommended', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='expertrating',
            name='largely_recommended_weight',
            field=models.FloatField(default=1, help_text='Should be largely recommended weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AddField(
            model_name='expertratingsliderchanges',
            name='largely_recommended',
            field=models.FloatField(blank=True, default=None, help_text='Should be largely recommended', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='historicalexpertrating',
            name='largely_recommended',
            field=models.FloatField(blank=True, default=None, help_text='Should be largely recommended', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='historicalexpertrating',
            name='largely_recommended_weight',
            field=models.FloatField(default=1, help_text='Should be largely recommended weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='largely_recommended',
            field=models.FloatField(default=0.0, help_text='Should be largely recommended', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='largely_recommended_enabled',
            field=models.BooleanField(default=True, help_text='largely_recommended given for ratings'),
        ),
        migrations.AddField(
            model_name='video',
            name='largely_recommended',
            field=models.FloatField(default=0, help_text='Should be largely recommended'),
        ),
        migrations.AddField(
            model_name='video',
            name='largely_recommended_quantile',
            field=models.FloatField(default=1.0, help_text='Top quantile for largely_recommended for all rated videos for aggregated scores. 0.0=best, 1.0=worst', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='largely_recommended_uncertainty',
            field=models.FloatField(default=0, help_text='Uncertainty for largely_recommended'),
        ),
        migrations.AddField(
            model_name='videocomment',
            name='largely_recommended',
            field=models.BooleanField(default=False, help_text='Should be largely recommended', null=True),
        ),
        migrations.AddField(
            model_name='videorating',
            name='largely_recommended',
            field=models.FloatField(default=0, help_text='Should be largely recommended'),
        ),
        migrations.AddField(
            model_name='videorating',
            name='largely_recommended_uncertainty',
            field=models.FloatField(default=0, help_text='Uncertainty for largely_recommended'),
        ),
        migrations.AlterField(
            model_name='userpreferences',
            name='engaging_enabled',
            field=models.BooleanField(default=False, help_text='engaging given for ratings'),
        ),
        migrations.AlterField(
            model_name='userpreferences',
            name='importance_enabled',
            field=models.BooleanField(default=False, help_text='importance given for ratings'),
        ),
        migrations.AlterField(
            model_name='userpreferences',
            name='reliability_enabled',
            field=models.BooleanField(default=False, help_text='reliability given for ratings'),
        ),
    ]

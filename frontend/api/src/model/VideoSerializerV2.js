/**
 * Tournesol API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserInformationSerializerNameOnly from './UserInformationSerializerNameOnly';

/**
 * The VideoSerializerV2 model module.
 * @module model/VideoSerializerV2
 * @version 2.0.0
 */
class VideoSerializerV2 {
    /**
     * Constructs a new <code>VideoSerializerV2</code>.
     * Serialize Videos.
     * @alias module:model/VideoSerializerV2
     * @param id {Number} 
     * @param videoId {String} Video ID from YouTube URL, matches ^[A-Za-z0-9-_]+$
     * @param score {Number} Computed video score.
     * @param name {String} Video Title
     * @param duration {String} Video Duration
     * @param language {String} Language as str.
     * @param publicationDate {Date} When the video was published
     * @param views {Number} Number of views
     * @param uploader {String} Name of the channel (uploader)
     * @param scorePreferencesTerm {Number} Computed video score [preferences].
     * @param scoreSearchTerm {Number} Computed video score [search].
     * @param ratingNExperts {Number} Number of experts in ratings
     * @param ratingNRatings {Number} Number of ratings
     * @param publicExperts {Array.<module:model/UserInformationSerializerNameOnly>} First 10 public certified contributors
     * @param nPublicExperts {Number} Number of certified public contributors
     * @param nPrivateExperts {Number} Number certified private contributors
     * @param paretoOptimal {Boolean} Is this video pareto-optimal?
     * @param tournesolScore {Number} The total Tournesol score with uniform preferences (value=50.0)
     * @param largelyRecommended {Number} Should be largely recommended
     * @param reliability {Number} Reliable and not misleading
     * @param importance {Number} Important and actionable
     * @param engaging {Number} Engaging and thought-provoking
     * @param pedagogy {Number} Clear and pedagogical
     * @param laymanFriendly {Number} Layman-friendly
     * @param diversityInclusion {Number} Diversity and Inclusion
     * @param backfireRisk {Number} Resilience to backfiring risks
     * @param betterHabits {Number} Encourages better habits
     * @param entertainingRelaxing {Number} Entertaining and relaxing
     * @param largelyRecommendedUncertainty {Number} Uncertainty for largely_recommended
     * @param reliabilityUncertainty {Number} Uncertainty for reliability
     * @param importanceUncertainty {Number} Uncertainty for importance
     * @param engagingUncertainty {Number} Uncertainty for engaging
     * @param pedagogyUncertainty {Number} Uncertainty for pedagogy
     * @param laymanFriendlyUncertainty {Number} Uncertainty for layman_friendly
     * @param diversityInclusionUncertainty {Number} Uncertainty for diversity_inclusion
     * @param backfireRiskUncertainty {Number} Uncertainty for backfire_risk
     * @param betterHabitsUncertainty {Number} Uncertainty for better_habits
     * @param entertainingRelaxingUncertainty {Number} Uncertainty for entertaining_relaxing
     * @param largelyRecommendedQuantile {Number} Top quantile for largely_recommended for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param reliabilityQuantile {Number} Top quantile for reliability for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param importanceQuantile {Number} Top quantile for importance for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param engagingQuantile {Number} Top quantile for engaging for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param pedagogyQuantile {Number} Top quantile for pedagogy for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param laymanFriendlyQuantile {Number} Top quantile for layman_friendly for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param diversityInclusionQuantile {Number} Top quantile for diversity_inclusion for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param backfireRiskQuantile {Number} Top quantile for backfire_risk for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param betterHabitsQuantile {Number} Top quantile for better_habits for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     * @param entertainingRelaxingQuantile {Number} Top quantile for entertaining_relaxing for all rated videos for aggregated scores. 0.0=best, 1.0=worst
     */
    constructor(id, videoId, score, name, duration, language, publicationDate, views, uploader, scorePreferencesTerm, scoreSearchTerm, ratingNExperts, ratingNRatings, publicExperts, nPublicExperts, nPrivateExperts, paretoOptimal, tournesolScore, largelyRecommended, reliability, importance, engaging, pedagogy, laymanFriendly, diversityInclusion, backfireRisk, betterHabits, entertainingRelaxing, largelyRecommendedUncertainty, reliabilityUncertainty, importanceUncertainty, engagingUncertainty, pedagogyUncertainty, laymanFriendlyUncertainty, diversityInclusionUncertainty, backfireRiskUncertainty, betterHabitsUncertainty, entertainingRelaxingUncertainty, largelyRecommendedQuantile, reliabilityQuantile, importanceQuantile, engagingQuantile, pedagogyQuantile, laymanFriendlyQuantile, diversityInclusionQuantile, backfireRiskQuantile, betterHabitsQuantile, entertainingRelaxingQuantile) { 
        
        VideoSerializerV2.initialize(this, id, videoId, score, name, duration, language, publicationDate, views, uploader, scorePreferencesTerm, scoreSearchTerm, ratingNExperts, ratingNRatings, publicExperts, nPublicExperts, nPrivateExperts, paretoOptimal, tournesolScore, largelyRecommended, reliability, importance, engaging, pedagogy, laymanFriendly, diversityInclusion, backfireRisk, betterHabits, entertainingRelaxing, largelyRecommendedUncertainty, reliabilityUncertainty, importanceUncertainty, engagingUncertainty, pedagogyUncertainty, laymanFriendlyUncertainty, diversityInclusionUncertainty, backfireRiskUncertainty, betterHabitsUncertainty, entertainingRelaxingUncertainty, largelyRecommendedQuantile, reliabilityQuantile, importanceQuantile, engagingQuantile, pedagogyQuantile, laymanFriendlyQuantile, diversityInclusionQuantile, backfireRiskQuantile, betterHabitsQuantile, entertainingRelaxingQuantile);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, videoId, score, name, duration, language, publicationDate, views, uploader, scorePreferencesTerm, scoreSearchTerm, ratingNExperts, ratingNRatings, publicExperts, nPublicExperts, nPrivateExperts, paretoOptimal, tournesolScore, largelyRecommended, reliability, importance, engaging, pedagogy, laymanFriendly, diversityInclusion, backfireRisk, betterHabits, entertainingRelaxing, largelyRecommendedUncertainty, reliabilityUncertainty, importanceUncertainty, engagingUncertainty, pedagogyUncertainty, laymanFriendlyUncertainty, diversityInclusionUncertainty, backfireRiskUncertainty, betterHabitsUncertainty, entertainingRelaxingUncertainty, largelyRecommendedQuantile, reliabilityQuantile, importanceQuantile, engagingQuantile, pedagogyQuantile, laymanFriendlyQuantile, diversityInclusionQuantile, backfireRiskQuantile, betterHabitsQuantile, entertainingRelaxingQuantile) { 
        obj['id'] = id;
        obj['video_id'] = videoId;
        obj['score'] = score;
        obj['name'] = name;
        obj['duration'] = duration;
        obj['language'] = language;
        obj['publication_date'] = publicationDate;
        obj['views'] = views;
        obj['uploader'] = uploader;
        obj['score_preferences_term'] = scorePreferencesTerm;
        obj['score_search_term'] = scoreSearchTerm;
        obj['rating_n_experts'] = ratingNExperts;
        obj['rating_n_ratings'] = ratingNRatings;
        obj['public_experts'] = publicExperts;
        obj['n_public_experts'] = nPublicExperts;
        obj['n_private_experts'] = nPrivateExperts;
        obj['pareto_optimal'] = paretoOptimal;
        obj['tournesol_score'] = tournesolScore;
        obj['largely_recommended'] = largelyRecommended;
        obj['reliability'] = reliability;
        obj['importance'] = importance;
        obj['engaging'] = engaging;
        obj['pedagogy'] = pedagogy;
        obj['layman_friendly'] = laymanFriendly;
        obj['diversity_inclusion'] = diversityInclusion;
        obj['backfire_risk'] = backfireRisk;
        obj['better_habits'] = betterHabits;
        obj['entertaining_relaxing'] = entertainingRelaxing;
        obj['largely_recommended_uncertainty'] = largelyRecommendedUncertainty;
        obj['reliability_uncertainty'] = reliabilityUncertainty;
        obj['importance_uncertainty'] = importanceUncertainty;
        obj['engaging_uncertainty'] = engagingUncertainty;
        obj['pedagogy_uncertainty'] = pedagogyUncertainty;
        obj['layman_friendly_uncertainty'] = laymanFriendlyUncertainty;
        obj['diversity_inclusion_uncertainty'] = diversityInclusionUncertainty;
        obj['backfire_risk_uncertainty'] = backfireRiskUncertainty;
        obj['better_habits_uncertainty'] = betterHabitsUncertainty;
        obj['entertaining_relaxing_uncertainty'] = entertainingRelaxingUncertainty;
        obj['largely_recommended_quantile'] = largelyRecommendedQuantile;
        obj['reliability_quantile'] = reliabilityQuantile;
        obj['importance_quantile'] = importanceQuantile;
        obj['engaging_quantile'] = engagingQuantile;
        obj['pedagogy_quantile'] = pedagogyQuantile;
        obj['layman_friendly_quantile'] = laymanFriendlyQuantile;
        obj['diversity_inclusion_quantile'] = diversityInclusionQuantile;
        obj['backfire_risk_quantile'] = backfireRiskQuantile;
        obj['better_habits_quantile'] = betterHabitsQuantile;
        obj['entertaining_relaxing_quantile'] = entertainingRelaxingQuantile;
    }

    /**
     * Constructs a <code>VideoSerializerV2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoSerializerV2} obj Optional instance to populate.
     * @return {module:model/VideoSerializerV2} The populated <code>VideoSerializerV2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoSerializerV2();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('video_id')) {
                obj['video_id'] = ApiClient.convertToType(data['video_id'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('publication_date')) {
                obj['publication_date'] = ApiClient.convertToType(data['publication_date'], 'Date');
            }
            if (data.hasOwnProperty('views')) {
                obj['views'] = ApiClient.convertToType(data['views'], 'Number');
            }
            if (data.hasOwnProperty('uploader')) {
                obj['uploader'] = ApiClient.convertToType(data['uploader'], 'String');
            }
            if (data.hasOwnProperty('score_preferences_term')) {
                obj['score_preferences_term'] = ApiClient.convertToType(data['score_preferences_term'], 'Number');
            }
            if (data.hasOwnProperty('score_search_term')) {
                obj['score_search_term'] = ApiClient.convertToType(data['score_search_term'], 'Number');
            }
            if (data.hasOwnProperty('rating_n_experts')) {
                obj['rating_n_experts'] = ApiClient.convertToType(data['rating_n_experts'], 'Number');
            }
            if (data.hasOwnProperty('rating_n_ratings')) {
                obj['rating_n_ratings'] = ApiClient.convertToType(data['rating_n_ratings'], 'Number');
            }
            if (data.hasOwnProperty('public_experts')) {
                obj['public_experts'] = ApiClient.convertToType(data['public_experts'], [UserInformationSerializerNameOnly]);
            }
            if (data.hasOwnProperty('n_public_experts')) {
                obj['n_public_experts'] = ApiClient.convertToType(data['n_public_experts'], 'Number');
            }
            if (data.hasOwnProperty('n_private_experts')) {
                obj['n_private_experts'] = ApiClient.convertToType(data['n_private_experts'], 'Number');
            }
            if (data.hasOwnProperty('pareto_optimal')) {
                obj['pareto_optimal'] = ApiClient.convertToType(data['pareto_optimal'], 'Boolean');
            }
            if (data.hasOwnProperty('tournesol_score')) {
                obj['tournesol_score'] = ApiClient.convertToType(data['tournesol_score'], 'Number');
            }
            if (data.hasOwnProperty('largely_recommended')) {
                obj['largely_recommended'] = ApiClient.convertToType(data['largely_recommended'], 'Number');
            }
            if (data.hasOwnProperty('reliability')) {
                obj['reliability'] = ApiClient.convertToType(data['reliability'], 'Number');
            }
            if (data.hasOwnProperty('importance')) {
                obj['importance'] = ApiClient.convertToType(data['importance'], 'Number');
            }
            if (data.hasOwnProperty('engaging')) {
                obj['engaging'] = ApiClient.convertToType(data['engaging'], 'Number');
            }
            if (data.hasOwnProperty('pedagogy')) {
                obj['pedagogy'] = ApiClient.convertToType(data['pedagogy'], 'Number');
            }
            if (data.hasOwnProperty('layman_friendly')) {
                obj['layman_friendly'] = ApiClient.convertToType(data['layman_friendly'], 'Number');
            }
            if (data.hasOwnProperty('diversity_inclusion')) {
                obj['diversity_inclusion'] = ApiClient.convertToType(data['diversity_inclusion'], 'Number');
            }
            if (data.hasOwnProperty('backfire_risk')) {
                obj['backfire_risk'] = ApiClient.convertToType(data['backfire_risk'], 'Number');
            }
            if (data.hasOwnProperty('better_habits')) {
                obj['better_habits'] = ApiClient.convertToType(data['better_habits'], 'Number');
            }
            if (data.hasOwnProperty('entertaining_relaxing')) {
                obj['entertaining_relaxing'] = ApiClient.convertToType(data['entertaining_relaxing'], 'Number');
            }
            if (data.hasOwnProperty('largely_recommended_uncertainty')) {
                obj['largely_recommended_uncertainty'] = ApiClient.convertToType(data['largely_recommended_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('reliability_uncertainty')) {
                obj['reliability_uncertainty'] = ApiClient.convertToType(data['reliability_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('importance_uncertainty')) {
                obj['importance_uncertainty'] = ApiClient.convertToType(data['importance_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('engaging_uncertainty')) {
                obj['engaging_uncertainty'] = ApiClient.convertToType(data['engaging_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('pedagogy_uncertainty')) {
                obj['pedagogy_uncertainty'] = ApiClient.convertToType(data['pedagogy_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('layman_friendly_uncertainty')) {
                obj['layman_friendly_uncertainty'] = ApiClient.convertToType(data['layman_friendly_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('diversity_inclusion_uncertainty')) {
                obj['diversity_inclusion_uncertainty'] = ApiClient.convertToType(data['diversity_inclusion_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('backfire_risk_uncertainty')) {
                obj['backfire_risk_uncertainty'] = ApiClient.convertToType(data['backfire_risk_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('better_habits_uncertainty')) {
                obj['better_habits_uncertainty'] = ApiClient.convertToType(data['better_habits_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('entertaining_relaxing_uncertainty')) {
                obj['entertaining_relaxing_uncertainty'] = ApiClient.convertToType(data['entertaining_relaxing_uncertainty'], 'Number');
            }
            if (data.hasOwnProperty('largely_recommended_quantile')) {
                obj['largely_recommended_quantile'] = ApiClient.convertToType(data['largely_recommended_quantile'], 'Number');
            }
            if (data.hasOwnProperty('reliability_quantile')) {
                obj['reliability_quantile'] = ApiClient.convertToType(data['reliability_quantile'], 'Number');
            }
            if (data.hasOwnProperty('importance_quantile')) {
                obj['importance_quantile'] = ApiClient.convertToType(data['importance_quantile'], 'Number');
            }
            if (data.hasOwnProperty('engaging_quantile')) {
                obj['engaging_quantile'] = ApiClient.convertToType(data['engaging_quantile'], 'Number');
            }
            if (data.hasOwnProperty('pedagogy_quantile')) {
                obj['pedagogy_quantile'] = ApiClient.convertToType(data['pedagogy_quantile'], 'Number');
            }
            if (data.hasOwnProperty('layman_friendly_quantile')) {
                obj['layman_friendly_quantile'] = ApiClient.convertToType(data['layman_friendly_quantile'], 'Number');
            }
            if (data.hasOwnProperty('diversity_inclusion_quantile')) {
                obj['diversity_inclusion_quantile'] = ApiClient.convertToType(data['diversity_inclusion_quantile'], 'Number');
            }
            if (data.hasOwnProperty('backfire_risk_quantile')) {
                obj['backfire_risk_quantile'] = ApiClient.convertToType(data['backfire_risk_quantile'], 'Number');
            }
            if (data.hasOwnProperty('better_habits_quantile')) {
                obj['better_habits_quantile'] = ApiClient.convertToType(data['better_habits_quantile'], 'Number');
            }
            if (data.hasOwnProperty('entertaining_relaxing_quantile')) {
                obj['entertaining_relaxing_quantile'] = ApiClient.convertToType(data['entertaining_relaxing_quantile'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
VideoSerializerV2.prototype['id'] = undefined;

/**
 * Video ID from YouTube URL, matches ^[A-Za-z0-9-_]+$
 * @member {String} video_id
 */
VideoSerializerV2.prototype['video_id'] = undefined;

/**
 * Computed video score.
 * @member {Number} score
 * @default 0.0
 */
VideoSerializerV2.prototype['score'] = 0.0;

/**
 * Video Title
 * @member {String} name
 */
VideoSerializerV2.prototype['name'] = undefined;

/**
 * Video Duration
 * @member {String} duration
 */
VideoSerializerV2.prototype['duration'] = undefined;

/**
 * Language as str.
 * @member {String} language
 */
VideoSerializerV2.prototype['language'] = undefined;

/**
 * When the video was published
 * @member {Date} publication_date
 */
VideoSerializerV2.prototype['publication_date'] = undefined;

/**
 * Number of views
 * @member {Number} views
 */
VideoSerializerV2.prototype['views'] = undefined;

/**
 * Name of the channel (uploader)
 * @member {String} uploader
 */
VideoSerializerV2.prototype['uploader'] = undefined;

/**
 * Computed video score [preferences].
 * @member {Number} score_preferences_term
 * @default 0.0
 */
VideoSerializerV2.prototype['score_preferences_term'] = 0.0;

/**
 * Computed video score [search].
 * @member {Number} score_search_term
 * @default 0.0
 */
VideoSerializerV2.prototype['score_search_term'] = 0.0;

/**
 * Number of experts in ratings
 * @member {Number} rating_n_experts
 */
VideoSerializerV2.prototype['rating_n_experts'] = undefined;

/**
 * Number of ratings
 * @member {Number} rating_n_ratings
 */
VideoSerializerV2.prototype['rating_n_ratings'] = undefined;

/**
 * First 10 public certified contributors
 * @member {Array.<module:model/UserInformationSerializerNameOnly>} public_experts
 */
VideoSerializerV2.prototype['public_experts'] = undefined;

/**
 * Number of certified public contributors
 * @member {Number} n_public_experts
 */
VideoSerializerV2.prototype['n_public_experts'] = undefined;

/**
 * Number certified private contributors
 * @member {Number} n_private_experts
 */
VideoSerializerV2.prototype['n_private_experts'] = undefined;

/**
 * Is this video pareto-optimal?
 * @member {Boolean} pareto_optimal
 */
VideoSerializerV2.prototype['pareto_optimal'] = undefined;

/**
 * The total Tournesol score with uniform preferences (value=50.0)
 * @member {Number} tournesol_score
 * @default 0.0
 */
VideoSerializerV2.prototype['tournesol_score'] = 0.0;

/**
 * Should be largely recommended
 * @member {Number} largely_recommended
 */
VideoSerializerV2.prototype['largely_recommended'] = undefined;

/**
 * Reliable and not misleading
 * @member {Number} reliability
 */
VideoSerializerV2.prototype['reliability'] = undefined;

/**
 * Important and actionable
 * @member {Number} importance
 */
VideoSerializerV2.prototype['importance'] = undefined;

/**
 * Engaging and thought-provoking
 * @member {Number} engaging
 */
VideoSerializerV2.prototype['engaging'] = undefined;

/**
 * Clear and pedagogical
 * @member {Number} pedagogy
 */
VideoSerializerV2.prototype['pedagogy'] = undefined;

/**
 * Layman-friendly
 * @member {Number} layman_friendly
 */
VideoSerializerV2.prototype['layman_friendly'] = undefined;

/**
 * Diversity and Inclusion
 * @member {Number} diversity_inclusion
 */
VideoSerializerV2.prototype['diversity_inclusion'] = undefined;

/**
 * Resilience to backfiring risks
 * @member {Number} backfire_risk
 */
VideoSerializerV2.prototype['backfire_risk'] = undefined;

/**
 * Encourages better habits
 * @member {Number} better_habits
 */
VideoSerializerV2.prototype['better_habits'] = undefined;

/**
 * Entertaining and relaxing
 * @member {Number} entertaining_relaxing
 */
VideoSerializerV2.prototype['entertaining_relaxing'] = undefined;

/**
 * Uncertainty for largely_recommended
 * @member {Number} largely_recommended_uncertainty
 */
VideoSerializerV2.prototype['largely_recommended_uncertainty'] = undefined;

/**
 * Uncertainty for reliability
 * @member {Number} reliability_uncertainty
 */
VideoSerializerV2.prototype['reliability_uncertainty'] = undefined;

/**
 * Uncertainty for importance
 * @member {Number} importance_uncertainty
 */
VideoSerializerV2.prototype['importance_uncertainty'] = undefined;

/**
 * Uncertainty for engaging
 * @member {Number} engaging_uncertainty
 */
VideoSerializerV2.prototype['engaging_uncertainty'] = undefined;

/**
 * Uncertainty for pedagogy
 * @member {Number} pedagogy_uncertainty
 */
VideoSerializerV2.prototype['pedagogy_uncertainty'] = undefined;

/**
 * Uncertainty for layman_friendly
 * @member {Number} layman_friendly_uncertainty
 */
VideoSerializerV2.prototype['layman_friendly_uncertainty'] = undefined;

/**
 * Uncertainty for diversity_inclusion
 * @member {Number} diversity_inclusion_uncertainty
 */
VideoSerializerV2.prototype['diversity_inclusion_uncertainty'] = undefined;

/**
 * Uncertainty for backfire_risk
 * @member {Number} backfire_risk_uncertainty
 */
VideoSerializerV2.prototype['backfire_risk_uncertainty'] = undefined;

/**
 * Uncertainty for better_habits
 * @member {Number} better_habits_uncertainty
 */
VideoSerializerV2.prototype['better_habits_uncertainty'] = undefined;

/**
 * Uncertainty for entertaining_relaxing
 * @member {Number} entertaining_relaxing_uncertainty
 */
VideoSerializerV2.prototype['entertaining_relaxing_uncertainty'] = undefined;

/**
 * Top quantile for largely_recommended for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} largely_recommended_quantile
 */
VideoSerializerV2.prototype['largely_recommended_quantile'] = undefined;

/**
 * Top quantile for reliability for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} reliability_quantile
 */
VideoSerializerV2.prototype['reliability_quantile'] = undefined;

/**
 * Top quantile for importance for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} importance_quantile
 */
VideoSerializerV2.prototype['importance_quantile'] = undefined;

/**
 * Top quantile for engaging for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} engaging_quantile
 */
VideoSerializerV2.prototype['engaging_quantile'] = undefined;

/**
 * Top quantile for pedagogy for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} pedagogy_quantile
 */
VideoSerializerV2.prototype['pedagogy_quantile'] = undefined;

/**
 * Top quantile for layman_friendly for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} layman_friendly_quantile
 */
VideoSerializerV2.prototype['layman_friendly_quantile'] = undefined;

/**
 * Top quantile for diversity_inclusion for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} diversity_inclusion_quantile
 */
VideoSerializerV2.prototype['diversity_inclusion_quantile'] = undefined;

/**
 * Top quantile for backfire_risk for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} backfire_risk_quantile
 */
VideoSerializerV2.prototype['backfire_risk_quantile'] = undefined;

/**
 * Top quantile for better_habits for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} better_habits_quantile
 */
VideoSerializerV2.prototype['better_habits_quantile'] = undefined;

/**
 * Top quantile for entertaining_relaxing for all rated videos for aggregated scores. 0.0=best, 1.0=worst
 * @member {Number} entertaining_relaxing_quantile
 */
VideoSerializerV2.prototype['entertaining_relaxing_quantile'] = undefined;






export default VideoSerializerV2;


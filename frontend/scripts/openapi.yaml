openapi: 3.0.3
info:
  title: Tournesol API
  version: 0.0.0
paths:
  /accounts/change-password/:
    post:
      operationId: accounts_change_password_create
      description: Change the user password.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /accounts/profile/:
    get:
      operationId: accounts_profile_retrieve
      description: Get or set user profile.
      tags:
      - accounts
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    post:
      operationId: accounts_profile_create
      description: Get or set user profile.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: accounts_profile_update
      description: Get or set user profile.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: accounts_profile_partial_update
      description: Get or set user profile.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /accounts/register/:
    post:
      operationId: accounts_register_create
      description: Register new user.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUser'
          description: ''
  /accounts/register-email/:
    post:
      operationId: accounts_register_email_create
      description: Register new email.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterEmailRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterEmail'
          description: ''
  /accounts/reset-password/:
    post:
      operationId: accounts_reset_password_create
      description: Reset password, given the signature and timestamp from the link.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /accounts/send-reset-password-link/:
    post:
      operationId: accounts_send_reset_password_link_create
      description: Send email with reset password link.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultSendResetPasswordLinkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DefaultSendResetPasswordLinkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DefaultSendResetPasswordLinkRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultSendResetPasswordLink'
          description: ''
  /accounts/verify-email/:
    post:
      operationId: accounts_verify_email_create
      description: Verify email via signature.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
  /accounts/verify-registration/:
    post:
      operationId: accounts_verify_registration_create
      description: Verify registration via signature.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyRegistrationRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyRegistration'
          description: ''
  /domains/:
    get:
      operationId: domains_list
      description: List all accepted (=trusted) email domains.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - domains
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailDomainList'
          description: ''
  /entities/:
    get:
      operationId: entities_list
      description: Fetch entities and their detailed scores in all polls
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
          enum:
          - video
        description: Type of entities to return
      - in: query
        name: poll_name
        schema:
          type: string
        description: If defined, only scores related to this poll will be returned
      tags:
      - entities
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntityList'
          description: ''
  /entities/{uid}/:
    get:
      operationId: entities_retrieve
      description: Fetch entities and their detailed scores in all polls
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          description: A unique identifier, build with a namespace and an external
            id.
        required: true
      - in: query
        name: type
        schema:
          type: string
          enum: []
        description: Type of entities to return
      - in: query
        name: poll_name
        schema:
          type: string
        description: If defined, only scores related to this poll will be returned
      tags:
      - entities
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
  /exports/comparisons/:
    get:
      operationId: exports_comparisons_retrieve
      description: Download public data in .csv file
      tags:
      - exports
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ''
  /polls/{name}/:
    get:
      operationId: polls_retrieve
      description: Retrieve a poll and its related criteria.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - polls
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
  /polls/{name}/recommendations/:
    get:
      operationId: polls_recommendations_list
      description: Retrieve a list of recommended videos, sorted by decreasing total
        score.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: date_lte
        schema:
          type: string
          format: date-time
      - in: query
        name: date_gte
        schema:
          type: string
          format: date-time
      - in: query
        name: search
        schema:
          type: string
          minLength: 1
        description: A search query to filter entities
      - in: query
        name: unsafe
        schema:
          type: boolean
          default: false
        description: If true, entities considered as unsafe recommendations because
          of a low score or due to too few contributions will be included.
      - in: query
        name: weights
        schema:
          type: object
          additionalProperties: {}
        description: Weights for criterias in this poll. The default weight is 10
          for each criteria.
        style: deepObject
        examples:
          WeightsExample:
            value:
              reliability: 10
              importance: 10
              ignored_criteria: 0
            summary: weights example
      tags:
      - polls
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecommendationList'
          description: ''
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /stats/:
    get:
      operationId: stats_retrieve
      description: Retrieve statistics.
      tags:
      - stats
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistics'
          description: ''
  /users/me/:
    delete:
      operationId: users_me_destroy
      description: |-
        Delete and logout the authenticated user.
        All related resources are also deleted: comparisons, rate-later list, access tokens, etc.
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '204':
          description: No response body
  /users/me/comparisons/{poll_name}:
    get:
      operationId: users_me_comparisons_list
      description: Retrieve all comparisons made by the logged user, in a given poll.
      parameters:
      - in: path
        name: poll_name
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedComparisonList'
          description: ''
    post:
      operationId: users_me_comparisons_create
      description: |-
        Create a new comparison associated with the logged user, in a given
        poll.
      parameters:
      - in: path
        name: poll_name
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComparisonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComparisonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComparisonRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comparison'
          description: ''
  /users/me/comparisons/{poll_name}/{uid_a}/{uid_b}/:
    get:
      operationId: users_me_comparisons_retrieve
      description: Retrieve a comparison made by the logged user, in the given poll.
      parameters:
      - in: path
        name: poll_name
        schema:
          type: string
        required: true
      - in: path
        name: uid_a
        schema:
          type: string
        required: true
      - in: path
        name: uid_b
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comparison'
          description: ''
    put:
      operationId: users_me_comparisons_update
      description: Update a comparison made by the logged user, in the given poll
      parameters:
      - in: path
        name: poll_name
        schema:
          type: string
        required: true
      - in: path
        name: uid_a
        schema:
          type: string
        required: true
      - in: path
        name: uid_b
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComparisonUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComparisonUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComparisonUpdateRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComparisonUpdate'
          description: ''
    delete:
      operationId: users_me_comparisons_destroy
      description: Delete a comparison made by the logged user, in the given poll
      parameters:
      - in: path
        name: poll_name
        schema:
          type: string
        required: true
      - in: path
        name: uid_a
        schema:
          type: string
        required: true
      - in: path
        name: uid_b
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '204':
          description: No response body
  /users/me/comparisons/{poll_name}/{uid}/:
    get:
      operationId: users_me_comparisons_list_filtered
      description: |-
        Retrieve a filtered list of comparisons made by the logged user, in
        the given poll.
      parameters:
      - in: path
        name: poll_name
        schema:
          type: string
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedComparisonList'
          description: ''
  /users/me/contributor_ratings/:
    get:
      operationId: users_me_contributor_ratings_list
      description: Retrieve the logged in user's ratings per video (computed automatically
        from the user's comparisons).
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: is_public
        schema:
          type: boolean
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContributorRatingList'
          description: ''
    post:
      operationId: users_me_contributor_ratings_create
      description: Initialize the rating object for the current user about a specific
        video, with optional visibility settings.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributorRatingCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContributorRatingCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContributorRatingCreateRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributorRatingCreate'
          description: ''
  /users/me/contributor_ratings/{video_id}/:
    get:
      operationId: users_me_contributor_ratings_retrieve
      description: Retrieve the logged-in user's ratings for a specific video (computed
        automatically from the user's comparisons)
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributorRating'
          description: ''
    put:
      operationId: users_me_contributor_ratings_update
      description: Update public / private status of the logged-in user ratings for
        a specific video.
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributorRatingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContributorRatingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContributorRatingRequest'
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributorRating'
          description: ''
    patch:
      operationId: users_me_contributor_ratings_partial_update
      description: Update public / private status of the logged-in user ratings for
        a specific video.
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContributorRatingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContributorRatingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContributorRatingRequest'
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributorRating'
          description: ''
  /users/me/contributor_ratings/_all/:
    patch:
      operationId: users_me_contributor_ratings__all_partial_update
      description: Mark all contributor ratings by current user as public or private.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContributorRatingUpdateAllRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContributorRatingUpdateAllRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContributorRatingUpdateAllRequest'
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributorRatingUpdateAll'
          description: ''
  /users/me/exports/all/:
    get:
      operationId: users_me_exports_all_retrieve
      description: Download current user data in .zip file
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ''
  /users/me/exports/comparisons/:
    get:
      operationId: users_me_exports_comparisons_retrieve
      description: Download current user data in .zip file
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ''
  /users/me/video_rate_later/:
    get:
      operationId: users_me_video_rate_later_list
      description: List all videos of a user's rate later list, or add a video to
        the list.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoRateLaterList'
          description: ''
    post:
      operationId: users_me_video_rate_later_create
      description: List all videos of a user's rate later list, or add a video to
        the list.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRateLaterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoRateLaterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoRateLaterRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoRateLater'
          description: ''
        '409':
          description: 'Conflict: the video is already in the rate later list, or
            there is an other error with the database query.'
  /users/me/video_rate_later/{video_id}/:
    get:
      operationId: users_me_video_rate_later_retrieve
      description: Fetch a video from user's rate later list
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoRateLater'
          description: ''
    delete:
      operationId: users_me_video_rate_later_destroy
      description: Delete a video from user's rate later list
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - oauth2:
        - read write groups
      responses:
        '204':
          description: No response body
  /video/:
    get:
      operationId: video_list
      description: Retrieve a list of recommended videos, sorted by decreasing total
        score.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: language
        schema:
          type: string
        description: Accepted languages separated by commas (e.g. 'en,fr,de'). If
          empty, accept all languages.
      - in: query
        name: uploader
        schema:
          type: string
      - in: query
        name: date_lte
        schema:
          type: string
          format: date-time
        description: "Return videos published **before** this date.  \nAccepted formats:\
          \ ISO 8601 datetime (e.g `2021-12-01T12:45:00`) or legacy: `dd-mm-yy-hh-mm-ss`."
      - in: query
        name: date_gte
        schema:
          type: string
          format: date-time
        description: "Return videos published **after** this date.  \nAccepted formats:\
          \ ISO 8601 datetime (e.g `2021-12-01T12:45:00`) or legacy: `dd-mm-yy-hh-mm-ss`."
      - in: query
        name: unsafe
        schema:
          type: boolean
        description: If true, videos considered as unsafe recommendations because
          of a low score or due to too few contributions will be included.
      - in: query
        name: largely_recommended
        schema:
          type: integer
        description: Weight for criteria 'largely_recommended', between 0 and 100
      - in: query
        name: reliability
        schema:
          type: integer
        description: Weight for criteria 'reliability', between 0 and 100
      - in: query
        name: importance
        schema:
          type: integer
        description: Weight for criteria 'importance', between 0 and 100
      - in: query
        name: engaging
        schema:
          type: integer
        description: Weight for criteria 'engaging', between 0 and 100
      - in: query
        name: pedagogy
        schema:
          type: integer
        description: Weight for criteria 'pedagogy', between 0 and 100
      - in: query
        name: layman_friendly
        schema:
          type: integer
        description: Weight for criteria 'layman_friendly', between 0 and 100
      - in: query
        name: diversity_inclusion
        schema:
          type: integer
        description: Weight for criteria 'diversity_inclusion', between 0 and 100
      - in: query
        name: backfire_risk
        schema:
          type: integer
        description: Weight for criteria 'backfire_risk', between 0 and 100
      - in: query
        name: better_habits
        schema:
          type: integer
        description: Weight for criteria 'better_habits', between 0 and 100
      - in: query
        name: entertaining_relaxing
        schema:
          type: integer
        description: Weight for criteria 'entertaining_relaxing', between 0 and 100
      tags:
      - video
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoSerializerWithCriteriaList'
          description: ''
    post:
      operationId: video_create
      description: Add a video to the db if it does not already exist.
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoRequest'
        required: true
      security:
      - oauth2:
        - read write groups
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /video/{video_id}/:
    get:
      operationId: video_retrieve
      description: Retrieve details about a single video.
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          description: Video ID from YouTube URL, matches ^[A-Za-z0-9-_]{11}$
        required: true
      tags:
      - video
      security:
      - oauth2:
        - read write groups
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoSerializerWithCriteria'
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
        password:
          type: string
      required:
      - old_password
      - password
    ChangePasswordRequest:
      type: object
      properties:
        old_password:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - old_password
      - password
      - password_confirm
    Comparison:
      type: object
      description: |-
        A comparison serializer used for the operations create, retrieve and list.

        Given the context determined by the view, it will represent the comparison
        in the reverse order.

        Use `ComparisonUpdateSerializer` for the update operation.
      properties:
        entity_a:
          $ref: '#/components/schemas/RelatedVideo'
        entity_b:
          $ref: '#/components/schemas/RelatedVideo'
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/ComparisonCriteriaScore'
        duration_ms:
          type: number
          format: float
          nullable: true
          description: Time it took to rate the videos (in milliseconds)
      required:
      - criteria_scores
      - entity_a
      - entity_b
    ComparisonCriteriaScore:
      type: object
      properties:
        criteria:
          type: string
          description: Name of the criteria
          maxLength: 32
        score:
          type: number
          format: float
          maximum: 10.0
          minimum: -10.0
          description: Score for the given comparison
        weight:
          type: number
          format: float
          description: Weight of the comparison
      required:
      - criteria
      - score
    ComparisonCriteriaScoreRequest:
      type: object
      properties:
        criteria:
          type: string
          minLength: 1
          description: Name of the criteria
          maxLength: 32
        score:
          type: number
          format: float
          maximum: 10.0
          minimum: -10.0
          description: Score for the given comparison
        weight:
          type: number
          format: float
          description: Weight of the comparison
      required:
      - criteria
      - score
    ComparisonRequest:
      type: object
      description: |-
        A comparison serializer used for the operations create, retrieve and list.

        Given the context determined by the view, it will represent the comparison
        in the reverse order.

        Use `ComparisonUpdateSerializer` for the update operation.
      properties:
        entity_a:
          $ref: '#/components/schemas/RelatedVideoRequest'
        entity_b:
          $ref: '#/components/schemas/RelatedVideoRequest'
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/ComparisonCriteriaScoreRequest'
        duration_ms:
          type: number
          format: float
          nullable: true
          description: Time it took to rate the videos (in milliseconds)
      required:
      - criteria_scores
      - entity_a
      - entity_b
    ComparisonUpdate:
      type: object
      description: |-
        A comparison serializer used only for updates.

        Given the context determined by the view, it will represent or save the
        comparison in the reverse order.

        Use `ComparisonSerializer` for all other operations.
      properties:
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/ComparisonCriteriaScore'
        duration_ms:
          type: number
          format: float
          nullable: true
          description: Time it took to rate the videos (in milliseconds)
        entity_a:
          allOf:
          - $ref: '#/components/schemas/Video'
          readOnly: true
        entity_b:
          allOf:
          - $ref: '#/components/schemas/Video'
          readOnly: true
      required:
      - criteria_scores
      - entity_a
      - entity_b
    ComparisonUpdateRequest:
      type: object
      description: |-
        A comparison serializer used only for updates.

        Given the context determined by the view, it will represent or save the
        comparison in the reverse order.

        Use `ComparisonSerializer` for all other operations.
      properties:
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/ComparisonCriteriaScoreRequest'
        duration_ms:
          type: number
          format: float
          nullable: true
          description: Time it took to rate the videos (in milliseconds)
      required:
      - criteria_scores
    ContributorCriteriaScore:
      type: object
      properties:
        criteria:
          type: string
          description: Name of the criteria
          maxLength: 32
        score:
          type: number
          format: float
          description: Score for the given criteria
        uncertainty:
          type: number
          format: float
          description: Uncertainty about the video's score for the given criteria
      required:
      - criteria
    ContributorCriteriaScoreRequest:
      type: object
      properties:
        criteria:
          type: string
          minLength: 1
          description: Name of the criteria
          maxLength: 32
        score:
          type: number
          format: float
          description: Score for the given criteria
        uncertainty:
          type: number
          format: float
          description: Uncertainty about the video's score for the given criteria
      required:
      - criteria
    ContributorRating:
      type: object
      properties:
        video:
          allOf:
          - $ref: '#/components/schemas/Video'
          readOnly: true
        is_public:
          type: boolean
          description: Should the rating be public?
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/ContributorCriteriaScore'
          readOnly: true
        n_comparisons:
          type: integer
          readOnly: true
          description: Number of comparisons submitted by the current user about the
            current video
      required:
      - criteria_scores
      - n_comparisons
      - video
    ContributorRatingCreate:
      type: object
      properties:
        is_public:
          type: boolean
          description: Should the rating be public?
        video:
          allOf:
          - $ref: '#/components/schemas/Video'
          readOnly: true
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/ContributorCriteriaScore'
          readOnly: true
        n_comparisons:
          type: integer
          readOnly: true
          description: Number of comparisons submitted by the current user about the
            current video
      required:
      - criteria_scores
      - n_comparisons
      - video
    ContributorRatingCreateRequest:
      type: object
      properties:
        video_id:
          type: string
          writeOnly: true
          minLength: 1
          pattern: ^[A-Za-z0-9-_]{11}$
        is_public:
          type: boolean
          description: Should the rating be public?
      required:
      - video_id
    ContributorRatingRequest:
      type: object
      properties:
        is_public:
          type: boolean
          description: Should the rating be public?
    ContributorRatingUpdateAll:
      type: object
      properties:
        is_public:
          type: boolean
      required:
      - is_public
    DefaultSendResetPasswordLink:
      type: object
      description: |-
        Default serializer used for sending reset password link.

        It will use :ref:`send-reset-password-link-serializer-use-email-setting`
        setting.
      properties:
        login:
          type: string
      required:
      - login
    DefaultSendResetPasswordLinkRequest:
      type: object
      description: |-
        Default serializer used for sending reset password link.

        It will use :ref:`send-reset-password-link-serializer-use-email-setting`
        setting.
      properties:
        login:
          type: string
          minLength: 1
      required:
      - login
    DegreeOfPoliticalEngagementEnum:
      enum:
      - Not Specified
      - None
      - Light
      - Interested
      - Engaged
      - Activist
      - Professional
      type: string
    EmailDomain:
      type: object
      properties:
        domain:
          type: string
          description: E-mail domain with leading @
          maxLength: 100
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: Status of the domain.
      required:
      - domain
    Entity:
      type: object
      properties:
        uid:
          type: string
          description: A unique identifier, build with a namespace and an external
            id.
          maxLength: 144
        type:
          $ref: '#/components/schemas/TypeEnum'
        metadata:
          type: object
          additionalProperties: {}
        polls:
          type: array
          items:
            $ref: '#/components/schemas/EntityPoll'
          readOnly: true
      required:
      - polls
      - type
      - uid
    EntityCriteriaScore:
      type: object
      properties:
        criteria:
          type: string
          description: Name of the criteria
          maxLength: 32
        score:
          type: number
          format: float
          description: Score of the given criteria
      required:
      - criteria
    EntityPoll:
      type: object
      properties:
        name:
          type: string
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/EntityCriteriaScore'
      required:
      - criteria_scores
      - name
    GenderEnum:
      enum:
      - Not Specified
      - Non-binary
      - Other
      - Female
      - Male
      type: string
    LanguageEnum:
      enum:
      - af
      - ar
      - ar-dz
      - ast
      - az
      - bg
      - be
      - bn
      - br
      - bs
      - ca
      - cs
      - cy
      - da
      - de
      - dsb
      - el
      - en
      - en-au
      - en-gb
      - eo
      - es
      - es-ar
      - es-co
      - es-mx
      - es-ni
      - es-ve
      - et
      - eu
      - fa
      - fi
      - fr
      - fy
      - ga
      - gd
      - gl
      - he
      - hi
      - hr
      - hsb
      - hu
      - hy
      - ia
      - id
      - ig
      - io
      - is
      - it
      - ja
      - ka
      - kab
      - kk
      - km
      - kn
      - ko
      - ky
      - lb
      - lt
      - lv
      - mk
      - ml
      - mn
      - mr
      - ms
      - my
      - nb
      - ne
      - nl
      - nn
      - os
      - pa
      - pl
      - pt
      - pt-br
      - ro
      - ru
      - sk
      - sl
      - sq
      - sr
      - sr-latn
      - sv
      - sw
      - ta
      - te
      - tg
      - th
      - tk
      - tr
      - tt
      - udm
      - uk
      - ur
      - uz
      - vi
      - zh-hans
      - zh-hant
      type: string
    MoralPhilosophyEnum:
      enum:
      - Not Specified
      - Utilitarian
      - Non-Utilitarian Consequentialist
      - Deontological
      - Virtue Ethics
      - Mixed
      - Other
      type: string
    NationalityEnum:
      enum:
      - Not Specified
      - Afghanistan
      - Åland Islands
      - Albania
      - Algeria
      - American Samoa
      - Andorra
      - Angola
      - Anguilla
      - Antarctica
      - Antigua and Barbuda
      - Argentina
      - Armenia
      - Aruba
      - Australia
      - Austria
      - Azerbaijan
      - Bahamas
      - Bahrain
      - Bangladesh
      - Barbados
      - Belarus
      - Belgium
      - Belize
      - Benin
      - Bermuda
      - Bhutan
      - Bolivia
      - Bonaire, Sint Eustatius and Saba
      - Bosnia and Herzegovina
      - Botswana
      - Bouvet Island
      - Brazil
      - British Indian Ocean Territory
      - Brunei
      - Bulgaria
      - Burkina Faso
      - Burundi
      - Cabo Verde
      - Cambodia
      - Cameroon
      - Canada
      - Cayman Islands
      - Central African Republic
      - Chad
      - Chile
      - China
      - Christmas Island
      - Cocos (Keeling) Islands
      - Colombia
      - Comoros
      - Congo
      - Congo (the Democratic Republic of the)
      - Cook Islands
      - Costa Rica
      - Côte d'Ivoire
      - Croatia
      - Cuba
      - Curaçao
      - Cyprus
      - Czechia
      - Denmark
      - Djibouti
      - Dominica
      - Dominican Republic
      - Ecuador
      - Egypt
      - El Salvador
      - Equatorial Guinea
      - Eritrea
      - Estonia
      - Eswatini
      - Ethiopia
      - Falkland Islands (Malvinas)
      - Faroe Islands
      - Fiji
      - Finland
      - France
      - French Guiana
      - French Polynesia
      - French Southern Territories
      - Gabon
      - Gambia
      - Georgia
      - Germany
      - Ghana
      - Gibraltar
      - Greece
      - Greenland
      - Grenada
      - Guadeloupe
      - Guam
      - Guatemala
      - Guernsey
      - Guinea
      - Guinea-Bissau
      - Guyana
      - Haiti
      - Heard Island and McDonald Islands
      - Holy See
      - Honduras
      - Hong Kong
      - Hungary
      - Iceland
      - India
      - Indonesia
      - Iran
      - Iraq
      - Ireland
      - Isle of Man
      - Israel
      - Italy
      - Jamaica
      - Japan
      - Jersey
      - Jordan
      - Kazakhstan
      - Kenya
      - Kiribati
      - Kuwait
      - Kyrgyzstan
      - Laos
      - Latvia
      - Lebanon
      - Lesotho
      - Liberia
      - Libya
      - Liechtenstein
      - Lithuania
      - Luxembourg
      - Macao
      - Madagascar
      - Malawi
      - Malaysia
      - Maldives
      - Mali
      - Malta
      - Marshall Islands
      - Martinique
      - Mauritania
      - Mauritius
      - Mayotte
      - Mexico
      - Micronesia (Federated States of)
      - Moldova
      - Monaco
      - Mongolia
      - Montenegro
      - Montserrat
      - Morocco
      - Mozambique
      - Myanmar
      - Namibia
      - Nauru
      - Nepal
      - Netherlands
      - New Caledonia
      - New Zealand
      - Nicaragua
      - Niger
      - Nigeria
      - Niue
      - Norfolk Island
      - North Korea
      - North Macedonia
      - Northern Mariana Islands
      - Norway
      - Oman
      - Pakistan
      - Palau
      - Palestine, State of
      - Panama
      - Papua New Guinea
      - Paraguay
      - Peru
      - Philippines
      - Pitcairn
      - Poland
      - Portugal
      - Puerto Rico
      - Qatar
      - Réunion
      - Romania
      - Russia
      - Rwanda
      - Saint Barthélemy
      - Saint Helena, Ascension and Tristan da Cunha
      - Saint Kitts and Nevis
      - Saint Lucia
      - Saint Martin (French part)
      - Saint Pierre and Miquelon
      - Saint Vincent and the Grenadines
      - Samoa
      - San Marino
      - Sao Tome and Principe
      - Saudi Arabia
      - Senegal
      - Serbia
      - Seychelles
      - Sierra Leone
      - Singapore
      - Sint Maarten (Dutch part)
      - Slovakia
      - Slovenia
      - Solomon Islands
      - Somalia
      - South Africa
      - South Georgia and the South Sandwich Islands
      - South Korea
      - South Sudan
      - Spain
      - Sri Lanka
      - Sudan
      - Suriname
      - Svalbard and Jan Mayen
      - Sweden
      - Switzerland
      - Syria
      - Taiwan
      - Tajikistan
      - Tanzania
      - Thailand
      - Timor-Leste
      - Togo
      - Tokelau
      - Tonga
      - Trinidad and Tobago
      - Tunisia
      - Turkey
      - Turkmenistan
      - Turks and Caicos Islands
      - Tuvalu
      - Uganda
      - Ukraine
      - United Arab Emirates
      - United Kingdom
      - United States Minor Outlying Islands
      - United States of America
      - Uruguay
      - Uzbekistan
      - Vanuatu
      - Venezuela
      - Vietnam
      - Virgin Islands (British)
      - Virgin Islands (U.S.)
      - Wallis and Futuna
      - Western Sahara
      - Yemen
      - Zambia
      - Zimbabwe
      type: string
    NullEnum:
      enum:
      - null
    PaginatedComparisonList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comparison'
    PaginatedContributorRatingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContributorRating'
    PaginatedEmailDomainList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmailDomain'
    PaginatedEntityList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
    PaginatedRecommendationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
    PaginatedVideoRateLaterList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VideoRateLater'
    PaginatedVideoSerializerWithCriteriaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VideoSerializerWithCriteria'
    PatchedContributorRatingRequest:
      type: object
      properties:
        is_public:
          type: boolean
          description: Should the rating be public?
    PatchedContributorRatingUpdateAllRequest:
      type: object
      properties:
        is_public:
          type: boolean
    PatchedUserProfileRequest:
      type: object
      description: |-
        Default serializer used for user profile. It will use these:

        * User fields
        * :ref:`user-hidden-fields-setting` setting
        * :ref:`user-public-fields-setting` setting
        * :ref:`user-editable-fields-setting` setting

        to automagically generate the required serializer fields.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_demo:
          type: boolean
          description: Is a demo account?
        first_name:
          type: string
          nullable: true
          description: First name
          maxLength: 100
        last_name:
          type: string
          nullable: true
          description: Last name
          maxLength: 100
        title:
          type: string
          nullable: true
          description: Your position
        bio:
          type: string
          nullable: true
          description: Self-description (degree, biography, ...)
        comment_anonymously:
          type: boolean
          description: Comment anonymously by-default
        show_online_presence:
          type: boolean
          description: Show my online presence on Tournesol
        show_my_profile:
          type: boolean
          description: Show my profile on Tournesol
        birth_year:
          type: integer
          maximum: 2100
          minimum: 1900
          nullable: true
          description: Year of birth
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: Your gender
        nationality:
          allOf:
          - $ref: '#/components/schemas/NationalityEnum'
          description: Your country of nationality
        residence:
          allOf:
          - $ref: '#/components/schemas/ResidenceEnum'
          description: Your country of residence
        race:
          allOf:
          - $ref: '#/components/schemas/RaceEnum'
          description: Your ethnicity
        political_affiliation:
          allOf:
          - $ref: '#/components/schemas/PoliticalAffiliationEnum'
          description: Your political preference
        religion:
          allOf:
          - $ref: '#/components/schemas/ReligionEnum'
          description: Your religion
        degree_of_political_engagement:
          allOf:
          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'
          description: Your degree of political engagement
        moral_philosophy:
          allOf:
          - $ref: '#/components/schemas/MoralPhilosophyEnum'
          description: Your preferred moral philosophy
        website:
          type: string
          format: uri
          nullable: true
          description: Your website URL
          maxLength: 500
        linkedin:
          type: string
          format: uri
          nullable: true
          description: Your LinkedIn URL
          maxLength: 500
        youtube:
          type: string
          format: uri
          nullable: true
          description: Your Youtube channel URL
          maxLength: 500
        google_scholar:
          type: string
          format: uri
          nullable: true
          description: Your Google Scholar URL
          maxLength: 500
        orcid:
          type: string
          format: uri
          nullable: true
          description: Your ORCID URL
          maxLength: 500
        researchgate:
          type: string
          format: uri
          nullable: true
          description: Your Researchgate profile URL
          maxLength: 500
        twitter:
          type: string
          format: uri
          nullable: true
          description: Your Twitter URL
          maxLength: 500
        avatar:
          type: string
          format: binary
          nullable: true
          description: Your profile picture.
        is_trusted:
          type: boolean
    PoliticalAffiliationEnum:
      enum:
      - Not Specified
      - Extreme left
      - Far left
      - Left
      - Centrist
      - Right
      - Far right
      - Extreme right
      - Other
      type: string
    Poll:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        criterias:
          type: array
          items:
            $ref: '#/components/schemas/PollCriteria'
      required:
      - criterias
      - name
    PollCriteria:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        optional:
          type: boolean
      required:
      - label
      - name
    RaceEnum:
      enum:
      - Not Specified
      - African
      - African American
      - American Indian
      - Arabic or Middle Eastern
      - Asian
      - Caucasian
      - Latino or Hispanic
      - Mixed
      - Unknown
      - Other
      type: string
    Recommendation:
      type: object
      properties:
        uid:
          type: string
          description: A unique identifier, build with a namespace and an external
            id.
          maxLength: 144
        n_comparisons:
          type: integer
        n_contributors:
          type: integer
        metadata:
          type: object
          additionalProperties: {}
        total_score:
          type: number
          format: float
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/EntityCriteriaScore'
      required:
      - criteria_scores
      - n_comparisons
      - n_contributors
      - total_score
      - uid
    RegisterEmail:
      type: object
      description: Default serializer used for e-mail registration (e-mail change).
      properties:
        email:
          type: string
          format: email
      required:
      - email
    RegisterEmailRequest:
      type: object
      description: Default serializer used for e-mail registration (e-mail change).
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    RegisterUser:
      type: object
      description: |-
        Default serializer used for user registration. It will use these:

        * User fields
        * :ref:`user-hidden-fields-setting` setting
        * :ref:`user-public-fields-setting` setting

        to automagically generate the required serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_demo:
          type: boolean
          description: Is a demo account?
        first_name:
          type: string
          nullable: true
          description: First name
          maxLength: 100
        last_name:
          type: string
          nullable: true
          description: Last name
          maxLength: 100
        title:
          type: string
          nullable: true
          description: Your position
        bio:
          type: string
          nullable: true
          description: Self-description (degree, biography, ...)
        comment_anonymously:
          type: boolean
          description: Comment anonymously by-default
        show_online_presence:
          type: boolean
          description: Show my online presence on Tournesol
        show_my_profile:
          type: boolean
          description: Show my profile on Tournesol
        birth_year:
          type: integer
          maximum: 2100
          minimum: 1900
          nullable: true
          description: Year of birth
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: Your gender
        nationality:
          allOf:
          - $ref: '#/components/schemas/NationalityEnum'
          description: Your country of nationality
        residence:
          allOf:
          - $ref: '#/components/schemas/ResidenceEnum'
          description: Your country of residence
        race:
          allOf:
          - $ref: '#/components/schemas/RaceEnum'
          description: Your ethnicity
        political_affiliation:
          allOf:
          - $ref: '#/components/schemas/PoliticalAffiliationEnum'
          description: Your political preference
        religion:
          allOf:
          - $ref: '#/components/schemas/ReligionEnum'
          description: Your religion
        degree_of_political_engagement:
          allOf:
          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'
          description: Your degree of political engagement
        moral_philosophy:
          allOf:
          - $ref: '#/components/schemas/MoralPhilosophyEnum'
          description: Your preferred moral philosophy
        website:
          type: string
          format: uri
          nullable: true
          description: Your website URL
          maxLength: 500
        linkedin:
          type: string
          format: uri
          nullable: true
          description: Your LinkedIn URL
          maxLength: 500
        youtube:
          type: string
          format: uri
          nullable: true
          description: Your Youtube channel URL
          maxLength: 500
        google_scholar:
          type: string
          format: uri
          nullable: true
          description: Your Google Scholar URL
          maxLength: 500
        orcid:
          type: string
          format: uri
          nullable: true
          description: Your ORCID URL
          maxLength: 500
        researchgate:
          type: string
          format: uri
          nullable: true
          description: Your Researchgate profile URL
          maxLength: 500
        twitter:
          type: string
          format: uri
          nullable: true
          description: Your Twitter URL
          maxLength: 500
        avatar:
          type: string
          format: uri
          nullable: true
          description: Your profile picture.
      required:
      - email
      - id
      - password
      - username
    RegisterUserRequest:
      type: object
      description: |-
        Default serializer used for user registration. It will use these:

        * User fields
        * :ref:`user-hidden-fields-setting` setting
        * :ref:`user-public-fields-setting` setting

        to automagically generate the required serializer fields.
      properties:
        password:
          type: string
          minLength: 1
          maxLength: 128
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        is_demo:
          type: boolean
          description: Is a demo account?
        first_name:
          type: string
          nullable: true
          description: First name
          maxLength: 100
        last_name:
          type: string
          nullable: true
          description: Last name
          maxLength: 100
        title:
          type: string
          nullable: true
          description: Your position
        bio:
          type: string
          nullable: true
          description: Self-description (degree, biography, ...)
        comment_anonymously:
          type: boolean
          description: Comment anonymously by-default
        show_online_presence:
          type: boolean
          description: Show my online presence on Tournesol
        show_my_profile:
          type: boolean
          description: Show my profile on Tournesol
        birth_year:
          type: integer
          maximum: 2100
          minimum: 1900
          nullable: true
          description: Year of birth
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: Your gender
        nationality:
          allOf:
          - $ref: '#/components/schemas/NationalityEnum'
          description: Your country of nationality
        residence:
          allOf:
          - $ref: '#/components/schemas/ResidenceEnum'
          description: Your country of residence
        race:
          allOf:
          - $ref: '#/components/schemas/RaceEnum'
          description: Your ethnicity
        political_affiliation:
          allOf:
          - $ref: '#/components/schemas/PoliticalAffiliationEnum'
          description: Your political preference
        religion:
          allOf:
          - $ref: '#/components/schemas/ReligionEnum'
          description: Your religion
        degree_of_political_engagement:
          allOf:
          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'
          description: Your degree of political engagement
        moral_philosophy:
          allOf:
          - $ref: '#/components/schemas/MoralPhilosophyEnum'
          description: Your preferred moral philosophy
        website:
          type: string
          format: uri
          nullable: true
          description: Your website URL
          maxLength: 500
        linkedin:
          type: string
          format: uri
          nullable: true
          description: Your LinkedIn URL
          maxLength: 500
        youtube:
          type: string
          format: uri
          nullable: true
          description: Your Youtube channel URL
          maxLength: 500
        google_scholar:
          type: string
          format: uri
          nullable: true
          description: Your Google Scholar URL
          maxLength: 500
        orcid:
          type: string
          format: uri
          nullable: true
          description: Your ORCID URL
          maxLength: 500
        researchgate:
          type: string
          format: uri
          nullable: true
          description: Your Researchgate profile URL
          maxLength: 500
        twitter:
          type: string
          format: uri
          nullable: true
          description: Your Twitter URL
          maxLength: 500
        avatar:
          type: string
          format: binary
          nullable: true
          description: Your profile picture.
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
      - password_confirm
      - username
    RelatedVideo:
      type: object
      description: |-
        A video serializer that will create the Entity object on validation
        if it does not exist in the database yet.

        Used by ModelSerializer(s) having one or more nested relations with Entity,
        and having the constraint to ensure that video instances exist before
        they can be saved properly.
      properties:
        video_id:
          type: string
          pattern: ^[A-Za-z0-9-_]{11}$
        name:
          type: string
          readOnly: true
          description: Video Title
        description:
          type: string
          readOnly: true
          nullable: true
          description: Video Description from the web page
        publication_date:
          type: string
          format: date
          readOnly: true
          nullable: true
          description: Video publication date
        views:
          type: integer
          readOnly: true
          nullable: true
          description: Number of views
        uploader:
          type: string
          readOnly: true
          nullable: true
          description: Name of the channel (uploader)
        language:
          readOnly: true
          nullable: true
          description: Language of the video
          oneOf:
          - $ref: '#/components/schemas/LanguageEnum'
          - $ref: '#/components/schemas/NullEnum'
        rating_n_ratings:
          type: integer
          readOnly: true
          description: Total number of pairwise comparisons for this videofrom certified
            contributors
        rating_n_contributors:
          type: integer
          readOnly: true
          description: Total number of certified contributors who rated the video
        duration:
          type: integer
          nullable: true
          readOnly: true
      required:
      - description
      - duration
      - language
      - name
      - publication_date
      - rating_n_contributors
      - rating_n_ratings
      - uploader
      - video_id
      - views
    RelatedVideoRequest:
      type: object
      description: |-
        A video serializer that will create the Entity object on validation
        if it does not exist in the database yet.

        Used by ModelSerializer(s) having one or more nested relations with Entity,
        and having the constraint to ensure that video instances exist before
        they can be saved properly.
      properties:
        video_id:
          type: string
          minLength: 1
          pattern: ^[A-Za-z0-9-_]{11}$
      required:
      - video_id
    ReligionEnum:
      enum:
      - Not Specified
      - Christian
      - Muslim
      - Hindu
      - Buddhist
      - Jewish
      - Atheist
      - Agnostic
      - Other
      type: string
    ResetPassword:
      type: object
      properties:
        user_id:
          type: string
        timestamp:
          type: integer
        signature:
          type: string
        password:
          type: string
      required:
      - password
      - signature
      - timestamp
      - user_id
    ResetPasswordRequest:
      type: object
      properties:
        user_id:
          type: string
          minLength: 1
        timestamp:
          type: integer
        signature:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - password
      - signature
      - timestamp
      - user_id
    ResidenceEnum:
      enum:
      - Not Specified
      - Afghanistan
      - Åland Islands
      - Albania
      - Algeria
      - American Samoa
      - Andorra
      - Angola
      - Anguilla
      - Antarctica
      - Antigua and Barbuda
      - Argentina
      - Armenia
      - Aruba
      - Australia
      - Austria
      - Azerbaijan
      - Bahamas
      - Bahrain
      - Bangladesh
      - Barbados
      - Belarus
      - Belgium
      - Belize
      - Benin
      - Bermuda
      - Bhutan
      - Bolivia
      - Bonaire, Sint Eustatius and Saba
      - Bosnia and Herzegovina
      - Botswana
      - Bouvet Island
      - Brazil
      - British Indian Ocean Territory
      - Brunei
      - Bulgaria
      - Burkina Faso
      - Burundi
      - Cabo Verde
      - Cambodia
      - Cameroon
      - Canada
      - Cayman Islands
      - Central African Republic
      - Chad
      - Chile
      - China
      - Christmas Island
      - Cocos (Keeling) Islands
      - Colombia
      - Comoros
      - Congo
      - Congo (the Democratic Republic of the)
      - Cook Islands
      - Costa Rica
      - Côte d'Ivoire
      - Croatia
      - Cuba
      - Curaçao
      - Cyprus
      - Czechia
      - Denmark
      - Djibouti
      - Dominica
      - Dominican Republic
      - Ecuador
      - Egypt
      - El Salvador
      - Equatorial Guinea
      - Eritrea
      - Estonia
      - Eswatini
      - Ethiopia
      - Falkland Islands (Malvinas)
      - Faroe Islands
      - Fiji
      - Finland
      - France
      - French Guiana
      - French Polynesia
      - French Southern Territories
      - Gabon
      - Gambia
      - Georgia
      - Germany
      - Ghana
      - Gibraltar
      - Greece
      - Greenland
      - Grenada
      - Guadeloupe
      - Guam
      - Guatemala
      - Guernsey
      - Guinea
      - Guinea-Bissau
      - Guyana
      - Haiti
      - Heard Island and McDonald Islands
      - Holy See
      - Honduras
      - Hong Kong
      - Hungary
      - Iceland
      - India
      - Indonesia
      - Iran
      - Iraq
      - Ireland
      - Isle of Man
      - Israel
      - Italy
      - Jamaica
      - Japan
      - Jersey
      - Jordan
      - Kazakhstan
      - Kenya
      - Kiribati
      - Kuwait
      - Kyrgyzstan
      - Laos
      - Latvia
      - Lebanon
      - Lesotho
      - Liberia
      - Libya
      - Liechtenstein
      - Lithuania
      - Luxembourg
      - Macao
      - Madagascar
      - Malawi
      - Malaysia
      - Maldives
      - Mali
      - Malta
      - Marshall Islands
      - Martinique
      - Mauritania
      - Mauritius
      - Mayotte
      - Mexico
      - Micronesia (Federated States of)
      - Moldova
      - Monaco
      - Mongolia
      - Montenegro
      - Montserrat
      - Morocco
      - Mozambique
      - Myanmar
      - Namibia
      - Nauru
      - Nepal
      - Netherlands
      - New Caledonia
      - New Zealand
      - Nicaragua
      - Niger
      - Nigeria
      - Niue
      - Norfolk Island
      - North Korea
      - North Macedonia
      - Northern Mariana Islands
      - Norway
      - Oman
      - Pakistan
      - Palau
      - Palestine, State of
      - Panama
      - Papua New Guinea
      - Paraguay
      - Peru
      - Philippines
      - Pitcairn
      - Poland
      - Portugal
      - Puerto Rico
      - Qatar
      - Réunion
      - Romania
      - Russia
      - Rwanda
      - Saint Barthélemy
      - Saint Helena, Ascension and Tristan da Cunha
      - Saint Kitts and Nevis
      - Saint Lucia
      - Saint Martin (French part)
      - Saint Pierre and Miquelon
      - Saint Vincent and the Grenadines
      - Samoa
      - San Marino
      - Sao Tome and Principe
      - Saudi Arabia
      - Senegal
      - Serbia
      - Seychelles
      - Sierra Leone
      - Singapore
      - Sint Maarten (Dutch part)
      - Slovakia
      - Slovenia
      - Solomon Islands
      - Somalia
      - South Africa
      - South Georgia and the South Sandwich Islands
      - South Korea
      - South Sudan
      - Spain
      - Sri Lanka
      - Sudan
      - Suriname
      - Svalbard and Jan Mayen
      - Sweden
      - Switzerland
      - Syria
      - Taiwan
      - Tajikistan
      - Tanzania
      - Thailand
      - Timor-Leste
      - Togo
      - Tokelau
      - Tonga
      - Trinidad and Tobago
      - Tunisia
      - Turkey
      - Turkmenistan
      - Turks and Caicos Islands
      - Tuvalu
      - Uganda
      - Ukraine
      - United Arab Emirates
      - United Kingdom
      - United States Minor Outlying Islands
      - United States of America
      - Uruguay
      - Uzbekistan
      - Vanuatu
      - Venezuela
      - Vietnam
      - Virgin Islands (British)
      - Virgin Islands (U.S.)
      - Wallis and Futuna
      - Western Sahara
      - Yemen
      - Zambia
      - Zimbabwe
      type: string
    Statistics:
      type: object
      description: A representation of the Tournesol public statistics.
      properties:
        user_count:
          type: integer
        last_month_user_count:
          type: integer
        video_count:
          type: integer
        last_month_video_count:
          type: integer
        comparison_count:
          type: integer
        last_month_comparison_count:
          type: integer
      required:
      - comparison_count
      - last_month_comparison_count
      - last_month_user_count
      - last_month_video_count
      - user_count
      - video_count
    StatusEnum:
      enum:
      - RJ
      - ACK
      - PD
      type: string
    TypeEnum:
      enum:
      - video
      type: string
    UserProfile:
      type: object
      description: |-
        Default serializer used for user profile. It will use these:

        * User fields
        * :ref:`user-hidden-fields-setting` setting
        * :ref:`user-public-fields-setting` setting
        * :ref:`user-editable-fields-setting` setting

        to automagically generate the required serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        is_demo:
          type: boolean
          description: Is a demo account?
        first_name:
          type: string
          nullable: true
          description: First name
          maxLength: 100
        last_name:
          type: string
          nullable: true
          description: Last name
          maxLength: 100
        title:
          type: string
          nullable: true
          description: Your position
        bio:
          type: string
          nullable: true
          description: Self-description (degree, biography, ...)
        comment_anonymously:
          type: boolean
          description: Comment anonymously by-default
        show_online_presence:
          type: boolean
          description: Show my online presence on Tournesol
        show_my_profile:
          type: boolean
          description: Show my profile on Tournesol
        birth_year:
          type: integer
          maximum: 2100
          minimum: 1900
          nullable: true
          description: Year of birth
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: Your gender
        nationality:
          allOf:
          - $ref: '#/components/schemas/NationalityEnum'
          description: Your country of nationality
        residence:
          allOf:
          - $ref: '#/components/schemas/ResidenceEnum'
          description: Your country of residence
        race:
          allOf:
          - $ref: '#/components/schemas/RaceEnum'
          description: Your ethnicity
        political_affiliation:
          allOf:
          - $ref: '#/components/schemas/PoliticalAffiliationEnum'
          description: Your political preference
        religion:
          allOf:
          - $ref: '#/components/schemas/ReligionEnum'
          description: Your religion
        degree_of_political_engagement:
          allOf:
          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'
          description: Your degree of political engagement
        moral_philosophy:
          allOf:
          - $ref: '#/components/schemas/MoralPhilosophyEnum'
          description: Your preferred moral philosophy
        website:
          type: string
          format: uri
          nullable: true
          description: Your website URL
          maxLength: 500
        linkedin:
          type: string
          format: uri
          nullable: true
          description: Your LinkedIn URL
          maxLength: 500
        youtube:
          type: string
          format: uri
          nullable: true
          description: Your Youtube channel URL
          maxLength: 500
        google_scholar:
          type: string
          format: uri
          nullable: true
          description: Your Google Scholar URL
          maxLength: 500
        orcid:
          type: string
          format: uri
          nullable: true
          description: Your ORCID URL
          maxLength: 500
        researchgate:
          type: string
          format: uri
          nullable: true
          description: Your Researchgate profile URL
          maxLength: 500
        twitter:
          type: string
          format: uri
          nullable: true
          description: Your Twitter URL
          maxLength: 500
        avatar:
          type: string
          format: uri
          nullable: true
          description: Your profile picture.
        is_trusted:
          type: boolean
      required:
      - email
      - id
      - is_trusted
      - username
    UserProfileRequest:
      type: object
      description: |-
        Default serializer used for user profile. It will use these:

        * User fields
        * :ref:`user-hidden-fields-setting` setting
        * :ref:`user-public-fields-setting` setting
        * :ref:`user-editable-fields-setting` setting

        to automagically generate the required serializer fields.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_demo:
          type: boolean
          description: Is a demo account?
        first_name:
          type: string
          nullable: true
          description: First name
          maxLength: 100
        last_name:
          type: string
          nullable: true
          description: Last name
          maxLength: 100
        title:
          type: string
          nullable: true
          description: Your position
        bio:
          type: string
          nullable: true
          description: Self-description (degree, biography, ...)
        comment_anonymously:
          type: boolean
          description: Comment anonymously by-default
        show_online_presence:
          type: boolean
          description: Show my online presence on Tournesol
        show_my_profile:
          type: boolean
          description: Show my profile on Tournesol
        birth_year:
          type: integer
          maximum: 2100
          minimum: 1900
          nullable: true
          description: Year of birth
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: Your gender
        nationality:
          allOf:
          - $ref: '#/components/schemas/NationalityEnum'
          description: Your country of nationality
        residence:
          allOf:
          - $ref: '#/components/schemas/ResidenceEnum'
          description: Your country of residence
        race:
          allOf:
          - $ref: '#/components/schemas/RaceEnum'
          description: Your ethnicity
        political_affiliation:
          allOf:
          - $ref: '#/components/schemas/PoliticalAffiliationEnum'
          description: Your political preference
        religion:
          allOf:
          - $ref: '#/components/schemas/ReligionEnum'
          description: Your religion
        degree_of_political_engagement:
          allOf:
          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'
          description: Your degree of political engagement
        moral_philosophy:
          allOf:
          - $ref: '#/components/schemas/MoralPhilosophyEnum'
          description: Your preferred moral philosophy
        website:
          type: string
          format: uri
          nullable: true
          description: Your website URL
          maxLength: 500
        linkedin:
          type: string
          format: uri
          nullable: true
          description: Your LinkedIn URL
          maxLength: 500
        youtube:
          type: string
          format: uri
          nullable: true
          description: Your Youtube channel URL
          maxLength: 500
        google_scholar:
          type: string
          format: uri
          nullable: true
          description: Your Google Scholar URL
          maxLength: 500
        orcid:
          type: string
          format: uri
          nullable: true
          description: Your ORCID URL
          maxLength: 500
        researchgate:
          type: string
          format: uri
          nullable: true
          description: Your Researchgate profile URL
          maxLength: 500
        twitter:
          type: string
          format: uri
          nullable: true
          description: Your Twitter URL
          maxLength: 500
        avatar:
          type: string
          format: binary
          nullable: true
          description: Your profile picture.
        is_trusted:
          type: boolean
      required:
      - is_trusted
      - username
    VerifyEmail:
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
          format: email
        timestamp:
          type: integer
        signature:
          type: string
      required:
      - email
      - signature
      - timestamp
      - user_id
    VerifyEmailRequest:
      type: object
      properties:
        user_id:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        timestamp:
          type: integer
        signature:
          type: string
          minLength: 1
      required:
      - email
      - signature
      - timestamp
      - user_id
    VerifyRegistration:
      type: object
      properties:
        user_id:
          type: string
        timestamp:
          type: integer
        signature:
          type: string
      required:
      - signature
      - timestamp
      - user_id
    VerifyRegistrationRequest:
      type: object
      properties:
        user_id:
          type: string
          minLength: 1
        timestamp:
          type: integer
        signature:
          type: string
          minLength: 1
      required:
      - signature
      - timestamp
      - user_id
    Video:
      type: object
      properties:
        video_id:
          type: string
          description: Video ID from YouTube URL, matches ^[A-Za-z0-9-_]{11}$
          pattern: ^[A-Za-z0-9-_]{11}$
          maxLength: 20
        name:
          type: string
          readOnly: true
          description: Video Title
        description:
          type: string
          readOnly: true
          nullable: true
          description: Video Description from the web page
        publication_date:
          type: string
          format: date
          readOnly: true
          nullable: true
          description: Video publication date
        views:
          type: integer
          readOnly: true
          nullable: true
          description: Number of views
        uploader:
          type: string
          readOnly: true
          nullable: true
          description: Name of the channel (uploader)
        language:
          readOnly: true
          nullable: true
          description: Language of the video
          oneOf:
          - $ref: '#/components/schemas/LanguageEnum'
          - $ref: '#/components/schemas/NullEnum'
        rating_n_ratings:
          type: integer
          readOnly: true
          description: Total number of pairwise comparisons for this videofrom certified
            contributors
        rating_n_contributors:
          type: integer
          readOnly: true
          description: Total number of certified contributors who rated the video
        duration:
          type: integer
          nullable: true
          readOnly: true
      required:
      - description
      - duration
      - language
      - name
      - publication_date
      - rating_n_contributors
      - rating_n_ratings
      - uploader
      - video_id
      - views
    VideoRateLater:
      type: object
      properties:
        video:
          $ref: '#/components/schemas/RelatedVideo'
      required:
      - video
    VideoRateLaterRequest:
      type: object
      properties:
        video:
          $ref: '#/components/schemas/RelatedVideoRequest'
      required:
      - video
    VideoRequest:
      type: object
      properties:
        video_id:
          type: string
          minLength: 1
          description: Video ID from YouTube URL, matches ^[A-Za-z0-9-_]{11}$
          pattern: ^[A-Za-z0-9-_]{11}$
          maxLength: 20
      required:
      - video_id
    VideoSerializerWithCriteria:
      type: object
      properties:
        video_id:
          type: string
          description: Video ID from YouTube URL, matches ^[A-Za-z0-9-_]{11}$
          pattern: ^[A-Za-z0-9-_]{11}$
          maxLength: 20
        name:
          type: string
          description: Video Title
          maxLength: 1000
        description:
          type: string
          nullable: true
          description: Video Description from the web page
        publication_date:
          type: string
          format: date
          nullable: true
          description: Video publication date
        views:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: Number of views
        uploader:
          type: string
          nullable: true
          description: Name of the channel (uploader)
          maxLength: 1000
        language:
          nullable: true
          description: Language of the video
          oneOf:
          - $ref: '#/components/schemas/LanguageEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        rating_n_ratings:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Total number of pairwise comparisons for this videofrom certified
            contributors
        rating_n_contributors:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Total number of certified contributors who rated the video
        duration:
          type: integer
          nullable: true
          readOnly: true
        criteria_scores:
          type: array
          items:
            $ref: '#/components/schemas/EntityCriteriaScore'
      required:
      - criteria_scores
      - duration
      - video_id
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: http://127.0.0.1:8000/o/token/
          refreshUrl: http://127.0.0.1:8000/o/token/
          scopes:
            openid: OpenID Connect scope
            read: Read scope
            write: Write scope
            groups: Access to your groups
